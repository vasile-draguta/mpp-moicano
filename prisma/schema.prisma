// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define user roles enum
enum UserRole {
  ADMIN
  USER
}

// Define log action types
enum LogActionType {
  CREATE
  READ
  UPDATE
  DELETE
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  name        String?
  password    String
  role        UserRole  @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  expenses    Expense[]
  logs        Log[] // One-to-many relationship with logs
  isMonitored Boolean   @default(false) // Flag for monitored users
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  expenses  Expense[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Expense {
  id          Int      @id @default(autoincrement())
  date        DateTime
  description String
  amount      Float
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  merchant    String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([categoryId])
}

// Model to track user actions and potential suspicious activity
model Log {
  id         Int           @id @default(autoincrement())
  userId     Int
  user       User          @relation(fields: [userId], references: [id])
  actionType LogActionType
  entityType String // The type of entity affected (e.g., "Expense", "User")
  entityId   Int? // The ID of the affected entity (nullable for read operations on lists)
  ipAddress  String? // IP address of the user
  userAgent  String? // User agent (browser/device info)
  details    String? // Additional details about the action
  timestamp  DateTime      @default(now())

  @@index([userId])
  @@index([actionType])
  @@index([timestamp])
}
